diff --git a/ssl/s3_lib.c b/ssl/s3_lib.c
index ac8bb67..3c702b0 100644
--- a/ssl/s3_lib.c
+++ b/ssl/s3_lib.c
@@ -184,7 +184,7 @@ int ssl3_new(SSL *ssl) {
    * TODO(davidben): Move this field into |s3|, have it store the normalized
    * protocol version, and implement this pre-negotiation quirk in |SSL_version|
    * at the API boundary rather than in internal state. */
-  ssl->version = TLS1_2_VERSION;
+  ssl->version = TLS1_3_VERSION;
   return 1;
 }
 
diff --git a/ssl/ssl_lib.c b/ssl/ssl_lib.c
index 0806084..9f29d6e 100644
--- a/ssl/ssl_lib.c
+++ b/ssl/ssl_lib.c
@@ -968,8 +968,8 @@ static int set_max_version(const SSL_PROTOCOL_METHOD *method, uint16_t *out,
   if (version == 0) {
     *out = method->max_version;
     /* TODO(svaldez): Enable TLS 1.3 by default once fully implemented. */
-    if (*out > TLS1_2_VERSION) {
-      *out = TLS1_2_VERSION;
+    if (*out > TLS1_3_VERSION) {
+      *out = TLS1_3_VERSION;
     }
     return 1;
   }
diff --git a/ssl/ssl_test.cc b/ssl/ssl_test.cc
index 80465ce..681a4a9 100644
--- a/ssl/ssl_test.cc
+++ b/ssl/ssl_test.cc
@@ -721,7 +721,7 @@ static void ExpectDefaultVersion(uint16_t min_version, uint16_t max_version,
 
 TEST(SSLTest, DefaultVersion) {
   // TODO(svaldez): Update this when TLS 1.3 is enabled by default.
-  ExpectDefaultVersion(TLS1_VERSION, TLS1_2_VERSION, &TLS_method);
+  ExpectDefaultVersion(TLS1_VERSION, TLS1_3_VERSION, &TLS_method);
   ExpectDefaultVersion(TLS1_VERSION, TLS1_VERSION, &TLSv1_method);
   ExpectDefaultVersion(TLS1_1_VERSION, TLS1_1_VERSION, &TLSv1_1_method);
   ExpectDefaultVersion(TLS1_2_VERSION, TLS1_2_VERSION, &TLSv1_2_method);
@@ -2543,7 +2543,7 @@ TEST(SSLTest, SetVersion) {
 
   // Zero is the default version.
   EXPECT_TRUE(SSL_CTX_set_max_proto_version(ctx.get(), 0));
-  EXPECT_EQ(TLS1_2_VERSION, ctx->max_version);
+  EXPECT_EQ(TLS1_3_VERSION, ctx->max_version);
   EXPECT_TRUE(SSL_CTX_set_min_proto_version(ctx.get(), 0));
   EXPECT_EQ(TLS1_VERSION, ctx->min_version);
 
